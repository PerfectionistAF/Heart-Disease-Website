# Generated by Django 5.0.3 on 2024-06-17 20:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('specialization', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('birthdate', models.DateTimeField()),
                ('address', models.CharField(max_length=250)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_files', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(verbose_name='Age (years)')),
                ('sex', models.IntegerField(choices=[(1, 'Male'), (0, 'Female')], default=1, verbose_name='Sex')),
                ('cp', models.IntegerField(choices=[(1, 'Typical Angina'), (2, 'Atypical Angina'), (3, 'Non-Anginal Pain'), (4, 'Asymptomatic')], verbose_name='Chest Pain Type')),
                ('trestbps', models.IntegerField(verbose_name='Resting Blood Pressure (mm Hg) on admission to the hospital')),
                ('chol', models.FloatField(verbose_name='Total Serum Cholesterol (mg/dl)')),
                ('fbs', models.IntegerField(choices=[(1, 'True'), (0, 'False')], default=1, verbose_name='Fasting Blood Sugar > 120 mg/dl?')),
                ('restecg', models.IntegerField(choices=[(0, 'Normal'), (1, 'Abnormal - ST-T wave'), (2, 'Abnormal - Left Ventricular Hypertrophy')], verbose_name='Resting Electrocardiographic Results')),
                ('thalach', models.IntegerField(verbose_name='Maximum Heart Rate Achieved')),
                ('exang', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0, verbose_name='Exercise Induced Angina?')),
                ('oldpeak', models.FloatField(verbose_name='ST Depression Induced by Exercise Relative to Rest')),
                ('slope', models.IntegerField(choices=[(1, 'Upsloping'), (2, 'Flat'), (3, 'Downsloping')], verbose_name='Slope of the Peak Exercise ST Segment')),
                ('ca', models.FloatField(verbose_name='Number of Major Vessels (0-3) Colored by Fluoroscopy')),
                ('thal', models.IntegerField(choices=[(3, 'Normal'), (6, 'Fixed Defect'), (7, 'Reversible Defect')], verbose_name='Thalassemia')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Electrocardiogram (ECG)')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', verbose_name='Echocardiogram')),
                ('diagnosis', models.CharField(max_length=255)),
                ('prognosis', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_files', to='users.patient')),
            ],
        ),
    ]
